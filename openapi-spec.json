{"openapi":"3.0.1","info":{"title":"Spring Boot API Template","description":"A comprehensive, production-ready Spring Boot template designed for enterprise applications.\nThis template provides a robust foundation with industry best practices, comprehensive error handling,\nand enterprise-grade features.\n\n## Authentication\n\nThis API uses **JWT (JSON Web Token)** authentication. To access protected endpoints:\n\n1. **Register** a new user via `POST /api/v1/auth/register`\n2. **Login** with your credentials via `POST /api/v1/auth/login`\n3. **Copy the accessToken** from the login response\n4. **Click the \"Authorize\" button** above and paste the token (without \"Bearer \" prefix)\n5. **Test protected endpoints** - they will automatically include the JWT token\n\n### Multi-Tenancy\n\nAll requests must include the `X-Tenant-ID` header to specify the tenant context.\nUsers and data are completely isolated between tenants.\n\n## Key Features\n\n### API Standards\n- **OpenAPI 3.0 Specification** - Complete API documentation with interactive testing\n- **RESTful Design** - Following REST architectural principles and HTTP standards\n- **Consistent Response Format** - Standardized JSON responses across all endpoints\n- **Comprehensive Error Handling** - Detailed error responses with trace IDs\n\n### Validation & Security\n- **JWT Authentication** - Stateless authentication with access and refresh tokens\n- **Input Validation** - Jakarta Bean Validation with custom error messages\n- **Multi-tenancy Support** - Complete data isolation between tenants\n- **CORS Configuration** - Cross-origin resource sharing support\n- **Security Headers** - HSTS, frame options, and content type protection\n\n### Observability\n- **Structured Logging** - JSON-formatted logs with correlation IDs\n- **Health Checks** - Spring Boot Actuator endpoints for monitoring\n- **Metrics Collection** - Application performance metrics\n- **Request Tracing** - End-to-end request tracking with tenant context\n\n### Development Experience\n- **Database Migrations** - Flyway integration for schema management\n- **Test Containers** - Integration testing with real databases\n- **Hot Reload** - Development-friendly configuration\n- **Code Quality** - Lombok integration for cleaner code\n\n## Technology Stack\n\n- **Framework**: Spring Boot 3.4.1 (Latest LTS)\n- **Runtime**: Java 21 LTS\n- **Security**: Spring Security 6.x with JWT\n- **Database**: PostgreSQL 15+ (Phase 4)\n- **Build Tool**: Apache Maven 3.9+\n- **Documentation**: SpringDoc OpenAPI 2.7.0\n- **Testing**: JUnit 5, Testcontainers, MockMvc\n\n## Getting Started\n\n1. Start by registering a new user in the **Authentication** section\n2. Login to get your JWT token\n3. Use the **Authorize** button to set your token\n4. Test any protected endpoint with automatic authentication\n\nAll endpoints follow REST conventions and return consistent JSON responses.\n","contact":{"name":"Enterprise Development Team","url":"https://docs.enterprise.com/api","email":"api-support@enterprise.com"},"license":{"name":"MIT License","url":"https://opensource.org/licenses/MIT"},"version":"1.0.0"},"servers":[{"url":"http://localhost:8080","description":"Local Development Environment"},{"url":"https://api-staging.enterprise.com","description":"Staging Environment"},{"url":"https://api.enterprise.com","description":"Production Environment"}],"security":[{"bearerAuth":[]}],"tags":[{"name":"Authentication","description":"User authentication and registration operations"},{"name":"User Management","description":"CRUD operations for user management with automatic tenant isolation"}],"paths":{"/api/v1/users/{id}":{"get":{"tags":["User Management"],"summary":"Get user by ID","description":"Retrieves a specific user by ID within the current tenant context. Access is automatically restricted to the current tenant.","operationId":"getUserById","parameters":[{"name":"id","in":"path","description":"User ID","required":true,"schema":{"type":"integer","format":"int64"},"example":1}],"responses":{"403":{"description":"Access denied","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"404":{"description":"User not found in current tenant","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"User found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserDto"}}}}}},"put":{"tags":["User Management"],"summary":"Update user","description":"Updates an existing user within the current tenant context. Only users belonging to the current tenant can be updated.","operationId":"updateUser","parameters":[{"name":"id","in":"path","description":"User ID","required":true,"schema":{"type":"integer","format":"int64"},"example":1}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserDto"}}},"required":true},"responses":{"403":{"description":"Access denied","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"User updated successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserDto"}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"404":{"description":"User not found in current tenant","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}}},"delete":{"tags":["User Management"],"summary":"Delete user","description":"Deletes a user by ID within the current tenant context. Only users belonging to the current tenant can be deleted.","operationId":"deleteUser","parameters":[{"name":"id","in":"path","description":"User ID","required":true,"schema":{"type":"integer","format":"int64"},"example":1}],"responses":{"403":{"description":"Access denied","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"404":{"description":"User not found in current tenant","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"204":{"description":"User deleted successfully"}}}},"/api/v1/users":{"get":{"tags":["User Management"],"summary":"Get all users","description":"Retrieves a paginated list of users within the current tenant context. Results are automatically filtered by PostgreSQL Row-Level Security.","operationId":"getAllUsers","parameters":[{"name":"page","in":"query","description":"Page number (0-based)","required":false,"schema":{"minimum":0,"type":"integer","format":"int32","default":0},"example":0},{"name":"size","in":"query","description":"Page size","required":false,"schema":{"minimum":1,"type":"integer","format":"int32","default":10},"example":10}],"responses":{"403":{"description":"Access denied - invalid or missing authentication","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"Users retrieved successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserDto"}}}}}},"post":{"tags":["User Management"],"summary":"Create new user","description":"Creates a new user within the current tenant context. The user will be automatically assigned to the current tenant.","operationId":"createUser","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserDto"}}},"required":true},"responses":{"403":{"description":"Access denied","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"201":{"description":"User created successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserDto"}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"409":{"description":"User with email already exists in current tenant","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}}}},"/api/v1/auth/register":{"post":{"tags":["Authentication"],"summary":"Register new user","description":"Creates a new user account within the current tenant context. Email must be unique within the tenant.","operationId":"register","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RegisterRequest"}}},"required":true},"responses":{"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"409":{"description":"Email already exists within tenant","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"201":{"description":"User registered successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthResponse"}}}}}}},"/api/v1/auth/login":{"post":{"tags":["Authentication"],"summary":"Login user","description":"Authenticates user credentials and returns JWT tokens. Authentication is performed within the current tenant context.","operationId":"login","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginRequest"}}},"required":true},"responses":{"404":{"description":"User not found in tenant","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"Login successful","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthResponse"}}}},"400":{"description":"Invalid input data","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"401":{"description":"Invalid credentials","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}}}}},"components":{"schemas":{"UserDto":{"required":["email","name"],"type":"object","properties":{"id":{"type":"integer","description":"User ID","format":"int64","readOnly":true,"example":123},"name":{"maxLength":50,"minLength":2,"type":"string","description":"User's full name","example":"John Doe"},"email":{"type":"string","description":"User's email address","example":"john.doe@example.com"},"age":{"maximum":120,"minimum":18,"type":"integer","description":"User's age","format":"int32","example":25},"phoneNumber":{"pattern":"^\\+?[1-9]\\d{1,14}$","type":"string","description":"User's phone number","example":"+1234567890"},"createdAt":{"type":"string","description":"Account creation timestamp","format":"date-time","readOnly":true},"updatedAt":{"type":"string","description":"Last update timestamp","format":"date-time","readOnly":true}},"description":"User information"},"ErrorResponse":{"type":"object","properties":{"status":{"type":"integer","description":"HTTP status code","format":"int32","example":400},"error":{"type":"string","description":"Error type/category","example":"VALIDATION_ERROR"},"message":{"type":"string","description":"Human-readable error message","example":"Invalid input provided"},"details":{"type":"string","description":"Detailed error description","example":"The 'email' field must be a valid email address"},"traceId":{"type":"string","description":"Unique trace ID for request tracking","example":"abc123-def456-ghi789"},"timestamp":{"type":"string","description":"Timestamp when error occurred","format":"date-time"},"path":{"type":"string","description":"API path where error occurred","example":"/api/v1/users"},"method":{"type":"string","description":"HTTP method used","example":"POST"},"fieldErrors":{"type":"array","description":"List of validation errors (if applicable)","items":{"$ref":"#/components/schemas/FieldError"}}},"description":"Standard error response format"},"FieldError":{"type":"object","properties":{"field":{"type":"string","description":"Field name that failed validation","example":"email"},"rejectedValue":{"type":"object","description":"Rejected value","example":"invalid-email"},"message":{"type":"string","description":"Validation error message","example":"must be a well-formed email address"}},"description":"Field validation error details"},"RegisterRequest":{"required":["email","name","password"],"type":"object","properties":{"name":{"maxLength":50,"minLength":2,"type":"string","description":"User's full name","example":"John Doe"},"email":{"type":"string","description":"User's email address","example":"john.doe@tenant1.com"},"password":{"maxLength":100,"minLength":6,"type":"string","description":"User's password","example":"password123"}},"description":"Registration request for creating new user account"},"AuthResponse":{"type":"object","properties":{"accessToken":{"type":"string","description":"JWT access token","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."},"refreshToken":{"type":"string","description":"JWT refresh token","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."},"tokenType":{"type":"string","description":"Token type","example":"Bearer"},"expiresAt":{"type":"string","description":"Access token expiration time","format":"date-time"},"user":{"$ref":"#/components/schemas/UserInfo"}},"description":"Authentication response with JWT tokens"},"UserInfo":{"type":"object","properties":{"id":{"type":"integer","description":"User ID","format":"int64","example":123},"name":{"type":"string","description":"User's name","example":"John Doe"},"email":{"type":"string","description":"User's email","example":"john.doe@tenant1.com"},"tenant":{"type":"string","description":"User's tenant","example":"tenant1"},"roles":{"type":"array","description":"User's roles","example":["USER","ADMIN"],"items":{"type":"string","description":"User's roles","example":"[\"USER\",\"ADMIN\"]"}}},"description":"User information"},"LoginRequest":{"required":["email","password"],"type":"object","properties":{"email":{"type":"string","description":"User's email address","example":"john.doe@tenant1.com"},"password":{"maxLength":2147483647,"minLength":6,"type":"string","description":"User's password","example":"password123"}},"description":"Login request with user credentials"}},"securitySchemes":{"bearerAuth":{"type":"http","description":"JWT token obtained from /api/v1/auth/login endpoint","name":"bearerAuth","scheme":"bearer","bearerFormat":"JWT"}}}}